/* SELECT * FROM Invoice i
JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId WHERE il.UnitPrice > .99 */

/* SELECT i.InvoiceDate, i.Total, c.FirstName, c.LastName
FROM Invoice i
JOIN Customer c ON i.CustomerId = c.CustomerId */

/* SELECT c.FirstName, c.LastName, e.FirstName, e.LastName
FROM Customer c
JOIN Employee e ON e.EmployeeId = c.SupportRepId */

/* SELECT al.Title, ar.Name
FROM Album al
JOIN Artist ar ON ar.ArtistId = al.ArtistId */

/* SELECT pt.TrackId from PlaylistTrack pt
JOIN Playlist p ON p.PlaylistId = pt.PlaylistId
WHERE p.Name = 'Music' */

/* SELECT * FROM PlaylistTrack
WHERE PlaylistId = 5 */

/* SELECT Name from Track t
Join PlaylistTrack pt ON t.TrackId = pt.TrackId
WHERE pt.PlaylistId = 5 */

/* SELECT t.Name, p.Name from Track t
Join PlaylistTrack pt ON t.TrackId = pt.TrackId
JOIN Playlist p ON pt.PlaylistId = p.PlaylistId */

/* SELECT t.Name, al.Title FROM Track t
JOIN Album al ON al.AlbumId = t.AlbumId
JOIN Genre g ON t.GenreId = g.GenreId
WHERE g.Name = 'Alternative' */

/* BLACK DIAMOND 1 */
/* SELECT t.Name, g.Name, al.Title, ar.Name, p.Name FROM Track t
JOIN Genre g ON t.GenreId = g.GenreId
JOIN Album al ON al.AlbumId = t.AlbumId
JOIN Artist ar ON al.ArtistId = ar.ArtistId
JOIN PlaylistTrack pt ON pt.TrackId = t.TrackId
JOIN Playlist p ON p.PlaylistId = pt.PlaylistId
WHERE p.Name = 'Music' */

/* SELECT * FROM Invoice
WHERE InvoiceId IN (SELECT InvoiceId FROM InvoiceLine WHERE UnitPrice > .99) */

/* SELECT * FROM PlaylistTrack
WHERE PlaylistId IN (SELECT PlaylistId FROM Playlist WHERE Name = 'Music') */

/* SELECT * FROM Track
WHERE TrackId IN (SELECT TrackId FROM PlaylistTrack WHERE PlaylistId = 5) */

/* SELECT * FROM Track
WHERE GenreId IN (SELECT GenreId FROM Genre WHERE Name = 'Comedy') */

/* SELECT * FROM Track
WHERE AlbumId IN (SELECT AlbumId FROM Album WHERE Title = 'Fireball') */

/* SELECT * FROM Track
WHERE AlbumId IN 
(SELECT AlbumId FROM Album WHERE ArtistId IN 
 (SELECT ArtistId FROM Artist WHERE Name= 'Queen')) */
 
/*  UPDATE Customer 
 SET Fax = NULL */
 
/*  UPDATE Customer
 SET Company = 'Self'
 WHERE Company IS NULL */
 
/*  UPDATE Customer
 SET LastName = 'Thompson'
 WHERE FirstName = 'Julia' AND LastName = 'Barnett'*/
 
/*  UPDATE Customer
 SET SupportRepId = 4
 WHERE Email = 'luisrojas@yahoo.cl' */
 
/*  UPDATE Track
 SET Composer = 'The darkness around us'
 WHERE GenreId IN (SELECT GenreId FROM Genre WHERE Name = 'Metal') AND Composer IS NULL */
 

/* SELECT COUNT(*) as num_of_tracks, g.Name FROM Track t
Join Genre g ON t.GenreId = g.GenreId
GROUP BY g.name */

/* SELECT COUNT(*) as num_of_tracks, g.Name FROM Track t
Join Genre g ON t.GenreId = g.GenreId
WHERE g.name = 'Pop' OR g.name = 'Rock'
GROUP BY g.name  */

/* SELECT COUNT(*) as num_of_albums, ar.Name FROM Album al
JOIN Artist ar ON al.ArtistId = ar.ArtistId
WHERE al.ArtistId = ar.ArtistId
GROUP BY ar.Name */

/* SELECT DISTINCT Composer FROM Track */

/* SELECT DISTINCT BillingPostalCode FROM Invoice */

/* SELECT DISTINCT Company FROM Customer */

/* CREATE TABLE practice_delete ( Name string, Type string, Value integer );
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "bronze", 50);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "bronze", 50);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "bronze", 50);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "silver", 100);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "silver", 100);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "gold", 150);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "gold", 150);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "gold", 150);
INSERT INTO practice_delete ( Name, Type, Value ) VALUES ("delete", "gold", 150); */

/* SELECT * FROM practice_delete;  */

/* DELETE FROM practice_delete WHERE Type = 'bronze' */

/* DELETE FROM practice_delete WHERE Type = 'silver' */

/* DELETE FROM practice_delete WHERE Value=150; */


/* CREATE TABLE users (
id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(100),
  email VARCHAR(200)
) */

/* CREATE TABLE products (
id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(100),
  price NUMERIC(10,2)
) */

/* CREATE TABLE orders(
id INTEGER PRIMARY KEY AUTOINCREMENT,
  ref INTEGER,
  FOREIGN KEY (ref) REFERENCES products(id)
) */

/* INSERT INTO users (name, email)
VALUES ('Ray', 'ray@mail.com'),
('Joanie', 'jmp@gmail.com'),
('Max', 'maxine@mail.com') */

/* SELECT * FROM users */

/* INSERT INTO products (name, price)
VALUES ('3DS', 200), ('Dress', 15), ('GameCube Controller', 30) */

/* SELECT * FROM products */

/* INSERT INTO orders (ref)
VALUES (2),(3),(1) */

/* SELECT * FROM orders */

/* SELECT SUM(p.price) FROM orders o
JOIN products p ON p.id = o.ref
WHERE o.id=1 */


/* ALTER TABLE orders
ADD COLUMN user_id INTEGER REFERENCES users(id) */

/* SELECT * FROM orders */

/* UPDATE orders
SET user_id = 3
WHERE orders.ref = 3 OR orders.ref = 2 */

/* SELECT * FROM orders */

/* UPDATE orders
SET user_id = 2
WHERE orders.ref = 1 */

/* SELECT * FROM orders */

/* SELECT * FROM orders o
WHERE user_id = 3 */

/* SELECT COUNT(*) AS num_of_orders, u.name FROM orders o 
JOIN users u ON u.id = o.user_id
GROUP BY u.name */

/* BLACK DIAMOND */
/* SELECT u.name, SUM(p.price) AS order_total FROM products p
JOIN orders o ON o.ref = p.id
JOIN users u ON u.id = o.user_id
GROUP BY u.name */
